class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        #HASHING
        mp = {}
        for i in range(len(nums)):
            diff = target-nums[i]
            if diff in mp:
                return [mp[diff],i]
            else:
                mp[nums[i]] = i
        return [-1,-1]
                

        #BRUTE FORCE
        # for i in range(len(nums)):
        #     for j in range(i+1,len(nums)):
        #         if nums[i] + nums[j] == target:
        #             return [i,j]
        # return [-1,-1]


        #TWO POINTERS
        # index = []
        # for i in range(len(nums)):
        #     index.append([nums[i],i])

        # index.sort(key=lambda x : x[0])
        # start = 0
        # end = len(nums)-1
        # while start < end:
        #     if index[start][0] + index[end][0] == target:
        #         return [index[start][1],index[end][1]]
        #     elif index[start][0] + index[end][0] > target:
        #         end -= 1
        #     else:
        #         start += 1

        # return [-1,-1]
